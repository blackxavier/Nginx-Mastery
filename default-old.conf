# This setting specifies the following settings:
# 1. cache directory
# 2. shared memory zone name and size of metadata store
# 3. size of the cache
# 4. how long till a cached item becomes invalid if not requested.
# 5. structure of the directories within the cache path
# cache is defined in the location block using the proxy_cache directive

proxy_cache_path /var/cache/nginx/staticsites 
                    keys_zone=StaticCache:20m 
                    max_size=10g
                    inactive=60m
                    levels=1:2;

proxy_cache_path /var/cache/nginx/api 
                    keys_zone=ApiCache:20m
                    max_size=10g
                    inactive=10m
                    levels=1:2;

upstream demo {
    server web:8000;

}

server{
    listen 80;
    

    location / {
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # send the user ip information to the upstream (django app)
        proxy_set_header Host $host;
        add_header X-Proxy-Cache $upstream_cache_status; # send this header back as a response
        proxy_cache StaticCache; # set the cache key
        # proxy_cache_methods GET; # set the HTTP methods to cache
        proxy_cache_valid 200 10m; # 200 response pages should be cached for 10m
        proxy_cache_valid 404 1m; # 404 response pages should be cached for 10m
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504; # determines under what circumstance nginx should server stale contents
        proxy_cache_background_update on;
    }

    location /static {
        alias /home/app/staticfiles/;
    }

    location /p1{
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        add_header X-Proxy-Cache $upstream_cache_status;
        proxy_cache_background_update on;
        # proxy_cache_methods GET;
    #    proxy_cache_bypass  $http_cache_bypass;
    #    proxy_cache off;
    }

    location /p2{
        proxy_pass http://demo;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        add_header X-Proxy-Cache $upstream_cache_status;
        proxy_cache ApiCache;
        proxy_cache_min_uses 5;
        proxy_ignore_headers Vary;
        proxy_cache_bypass $cookie_sessionid;
        proxy_cache_valid 200 10m;
        proxy_cache_background_update on;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504; # determines under what circumstance nginx should server stale contents

   
    }

}